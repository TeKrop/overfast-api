[project]
name = "overfast-api"
version = "2.34.0"
description = "Overwatch API giving data about heroes, maps, and players statistics."
license = {file = "LICENSE"}
authors = [
  {name = "Valentin PORCHET", email = "valentin.porchet@proton.me"}
]
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "beautifulsoup4 >=4.12.3,<4.13",
    "fastapi[standard] >=0.112.1,<0.113",
    "httpx[http2] >=0.27.0,<0.28",
    "loguru >=0.7.2,<0.8",
    "lxml >=5.3.0,<5.4",
    "redis >=5.0.8,<5.1",
    "pydantic >=2.8.2,<2.9",
    "pydantic-settings >=2.4.0,<2.5"
]

[project.urls]
Homepage = "https://overfast-api.tekrop.fr"
Documentation = "https://overfast-api.tekrop.fr"
Repository = "https://github.com/TeKrop/overfast-api"
Issues = "https://github.com/TeKrop/overfast-api/issues"

[tool.setuptools]
packages = ["app"]

[tool.uv]
compile-bytecode = true
dev-dependencies = [
    "fakeredis >=2.23.5,<2.24",
    "ipdb >=0.13.13,<0.14",
    "pytest >=8.3.2,<8.4",
    "pytest-asyncio >=0.23.8,<0.24",
    "pytest-cov >=5.0.0,<5.1",
    "pytest-randomly >=3.15.0,<3.16",
    "pytest-xdist >=3.6.1,<3.7",
    "ruff >=0.5.7,<0.6",
    "pre-commit >=3.8.0,<3.9"
]

[tool.ruff]
# Check app code and tests
src = ["app", "tests"]

# Assume Python 3.12
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",     # pycodestyle errors
    "W",     # pycodestyle warnings
    "F",     # pyflakes
    "C90",   # mccabe complexity checker
    "I001",  # isort
    "N",     # pep8-naming
    "UP",    # pyupgrade
    "ASYNC", # flake8-async
    "S",     # flake8-bandit
    "BLE",   # flake8-blind-except
    "B",     # flake8-bugbear
    "COM",   # flake8-commas
    "C4",    # flake8-comprehensions
    "DTZ",   # flake8-datetimez
    "T10",   # flake8-debugger
    "EM",    # flake8-errmsg
    "EXE",   # flake8-executable
    "FIX",   # flake8-fixme
    "FA",    # flake8-future-annotations
    "INT",   # flake8-gettext
    "ISC",   # flake8-implicit-str-concat
    "ICN",   # flake8-import-conventions
    "G",     # flake8-logging-format
    "INP",   # flake8-no-pep420
    "PIE",   # flake8-pie
    "T20",   # flake8-print
    "PYI",   # flake8-pyi
    "PT",    # flake8-pytest-style
    "Q",     # flake8-quotes
    "RSE",   # flake8-raise
    "RET",   # flake8-return
    "SLF",   # flake8-self
    "SLOT",  # flake8-slots
    "SIM",   # flake8-simplify
    "TID",   # flake8-tidy-imports
    "TD",    # flake8-todos
    "TCH",   # flake8-type-checking
    "ARG",   # flake8-unused-arguments
    "PTH",   # flake8-use-pathlib
    "ERA",   # eradicate commented-out code
    "PGH",   # pygrep-hooks
    "PL",    # pylint
    "TRY",   # tryceratops
    "FLY",   # flynt
    "PERF",  # perflint
    "FURB",  # refurb
    "RUF",   # ruff-specific rules
]
ignore = [
    # General rules to ignore
    "B008",    # do not perform function calls in argument defaults
    "S101",    # using "assert" is not a security issue
    "S113",    # using default timeout of httpx without specifying it
    "S311",    # there is no cryptographic usage of random here
    "RET505",  # allow using else after return statement
    "PLE1205", # error checking doesn't support {} format
    "PLR0913", # allow 6/7 arguments for some functions

    # Rules already handled by ruff formatter
    "E501",    # line too long
    "COM812",  # missing trailing comma
    "COM819",  # prohibited trailing comma
    "ISC001",  # single line implicit string concatenation
    "Q000",    # bad quotes in inline string
    "Q001",    # bad quotes in multiline string
    "Q002",    # bad quotes in docstring
    "Q003",    # avoidable escape quote
    "W191"     # tab indentation detected instead of spaces
]
# Allow some confusable UTF8 chars (used in regexp)
allowed-confusables = ["（", "）", "："]

[tool.ruff.lint.isort]
# Consider app as first-party for imports in tests
known-first-party = ["app"]
