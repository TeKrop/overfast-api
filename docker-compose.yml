services:
  app:
    build:
      context: .
      target: ${BUILD_TARGET:-main}
    command: /code/.venv/bin/fastapi run app/main.py --port 8080 --proxy-headers
    env_file: ${APP_VOLUME_PATH:-.}/.env
    volumes:
      - static_volume:/code/static
      - ${APP_VOLUME_PATH:-/tmp}/app-logs:/code/logs
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget --spider --quiet http://0.0.0.0:8080 || exit 1"]
      interval: 5s
      timeout: 5s

  worker:
    build:
      context: .
      target: ${BUILD_TARGET:-main}
    command: crond -f
    env_file: ${APP_VOLUME_PATH:-.}/.env
    volumes:
      - ${APP_VOLUME_PATH:-/tmp}/worker-logs:/code/logs
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep -i crond | grep -wv grep || exit 1"]
      interval: 5s
      timeout: 2s

  redis:
    build:
      context: ./build/redis
    command: sh -c "./entrypoint.sh"
    env_file: ${APP_VOLUME_PATH:-.}/.env
    # Run as privileged to allow the container to change the vm.overcommit_memory setting
    privileged: true
    volumes:
      - ${APP_VOLUME_PATH}/redis-data:/data
    restart: always
    deploy:
      resources:
        limits:
          memory: ${REDIS_MEMORY_LIMIT:-1gb}
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 3s
      timeout: 2s

  nginx:
    build:
      context: ./build/nginx
    ports:
      - "${APP_PORT}:80"
    entrypoint: ["/entrypoint.sh"]
    env_file: ${APP_VOLUME_PATH:-.}/.env
    volumes:
      - static_volume:/static
    depends_on:
      app:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget --spider --quiet http://localhost || exit 1"]
      interval: 5s
      timeout: 2s

  reverse-proxy:
    profiles:
      - testing
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./build/reverse-proxy/default.conf:/etc/nginx/conf.d/default.conf
      - ./build/reverse-proxy/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      nginx:
        condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "wget --spider --quiet http://localhost || exit 1"]
      interval: 5s
      timeout: 2s

volumes:
  static_volume: